{"version":3,"sources":["context/auth-context.js","pages/Auth.js","layouts/Modals/Modal.js","layouts/Backdrop/Backdrop.js","layouts/Events/EventItem/EventItem.js","layouts/Events/EventList/EventList.js","layouts/Spinner/Spinner.js","pages/Events.js","layouts/Bookings/BookingList/BookingList.js","pages/Bookings.js","layouts/Navigation/MainNavigation.js","App.js","reportWebVitals.js","index.js"],"names":["React","createContext","token","userId","login","tokenExpiration","logout","config","require","AuthPage","props","state","isLogin","showSuccess","showError","isLoading","switchModeHandler","setState","prevState","submitHandler","event","preventDefault","email","emailElement","current","value","password","passwordElement","trim","length","requestBody","query","fetch","URL","method","body","JSON","stringify","headers","then","res","status","Error","json","data","hasOwnProperty","setTimeout","context","catch","err","console","log","createRef","Fragment","className","onSubmit","this","htmlFor","type","id","ref","onClick","Component","contextType","authContext","modal","title","children","canCancel","onCancel","canConfirm","showButton","onConfirm","confirmText","Backdrop","eventItem","price","Date","date","toLocaleDateString","creatorId","onDetail","bind","eventId","eventList","events","map","_id","authUserId","createdBy","onViewDetail","Spinner","EventsPage","creating","selectedEvent","isActive","startCreateEventHandler","modalConfirmHandler","titleElementRef","priceElementRef","dateElementRef","description","descriptionElementRef","fetchEvents","modalCancelHandler","showDetailHandler","find","e","bookEventHandler","rows","AuthContext","bookingList","bookings","booking","createdAt","onDelete","BookingsPage","deleteBookingHandler","bookingId","fetchBookings","MainNavigation","Consumer","to","App","Provider","from","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed16e415.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default React.createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: (token, userId, tokenExpiration) => {},\r\n    logout: () => {}\r\n});","import React, { Component } from 'react';\r\nimport authContext from '../context/auth-context';\r\nimport './Auth.css';\r\n\r\nconst config = require('../assets/config.json');\r\n\r\nclass AuthPage extends Component {\r\n    state = {\r\n        isLogin: true,\r\n        showSuccess: false,\r\n        showError: false,\r\n        isLoading: false\r\n    }\r\n\r\n    static contextType = authContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.emailElement = React.createRef();\r\n        this.passwordElement = React.createRef();\r\n    }\r\n\r\n    switchModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return { isLogin: !prevState.isLogin };\r\n        })\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        this.setState({ isLoading: true });\r\n        event.preventDefault();\r\n        const email = this.emailElement.current.value;\r\n        const password = this.passwordElement.current.value;\r\n\r\n        if (email.trim().length === 0 || password.trim().length === 0) {\r\n            return;\r\n        }\r\n\r\n        let requestBody = {\r\n            query: `\r\n                query {\r\n                    login(email: \"${email}\", password: \"${password}\") {\r\n                        userId\r\n                        token\r\n                        tokenExpiration\r\n                    }\r\n                }\r\n            `\r\n        }\r\n\r\n        if (!this.state.isLogin) {\r\n            requestBody = {\r\n                query: `\r\n                    mutation {\r\n                        createUser(userInput: {email: \"${email}\", password: \"${password}\"}) {\r\n                            _id\r\n                            email\r\n                        }\r\n                    }\r\n                `\r\n            }\r\n        }\r\n\r\n        fetch(config.URL, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Failed !!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                if (data.hasOwnProperty('errors')) {\r\n\r\n                    this.setState({ showError: true, isLoading: false });\r\n                    setTimeout(() => {\r\n                        this.setState({ showError: false });\r\n                    }, 3000);\r\n                    return;\r\n\r\n                } else {\r\n                    if (data.data.hasOwnProperty('login')) {\r\n                        this.context.login(\r\n                            data.data.login.token,\r\n                            data.data.login.userId,\r\n                            data.data.login.tokenExpiration\r\n                        );\r\n\r\n                    } else {\r\n                        this.setState({ showSuccess: true, isLoading: false });\r\n                        setTimeout(() => {\r\n                            this.setState({ showSuccess: false });\r\n                        }, 3000);\r\n                    }\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                this.setState({ showError: true, isLoading: false });\r\n                setTimeout(() => {\r\n                    this.setState({ showError: false });\r\n                }, 3000);\r\n            })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <form className=\"auth-form\" onSubmit={this.submitHandler}>\r\n                    <h2>{this.state.isLogin ? 'Login' : 'Register'}</h2>\r\n                    <div className=\"form-control\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" ref={this.emailElement} />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" ref={this.passwordElement} />\r\n                    </div>\r\n                    <div className=\"form-actions\">\r\n                        <button type=\"submit\">Submit</button>\r\n                        <button type=\"button\" onClick={this.switchModeHandler}>Switch to {this.state.isLogin ? 'Signup' : 'Login'}</button>\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"message\">\r\n                    {this.state.isLoading && (<h3>Sending request...!! Please wait.</h3>)}\r\n                    {this.state.showSuccess && (<h3>Registration Successful!! Please Login.</h3>)}\r\n                    {this.state.showError && (<h3>Error Occured!! Try Again.</h3>)}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AuthPage\r\n","import React from 'react';\r\n\r\nimport './Modal.css';\r\n\r\nconst modal = props => {\r\n    return (\r\n        <div className=\"modal\">\r\n            <header className=\"modal-header\">\r\n                <h1>{props.title}</h1>\r\n            </header>\r\n            <section className=\"modal-content\">\r\n                {props.children}\r\n            </section>\r\n            <section className=\"modal-actions\">\r\n                {props.canCancel && (\r\n                    <button className=\"btn\" onClick={props.onCancel}>Cancel</button>\r\n                )}\r\n                {(props.canConfirm && props.showButton) && (\r\n                    <button className=\"btn\" onClick={props.onConfirm}>{props.confirmText}</button>\r\n                )}\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default modal;","import React from 'react';\r\n\r\nimport './Backdrop.css'\r\n\r\nconst Backdrop = props => {\r\n    return (\r\n        <div className=\"backdrop\"></div>\r\n    )\r\n};\r\n\r\nexport default Backdrop;","import React from 'react';\r\n\r\nimport './EventItem.css';\r\n\r\nconst eventItem = props => {\r\n    return (\r\n        <li key={props.eventId} className=\"events-list-item\">\r\n            <div>\r\n                <h1>{props.title}</h1>\r\n                <h2>&#8377;{props.price} -- {new Date(props.date).toLocaleDateString()}</h2>\r\n            </div>\r\n            <div>\r\n                {props.userId === props.creatorId ?\r\n                    (<p>You are the owner of this event!</p>) :\r\n                    (<button className=\"btn\" onClick={props.onDetail.bind(this, props.eventId)}>View Details</button>)\r\n                }\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default eventItem","import React from 'react';\r\nimport EventItem from '../EventItem/EventItem';\r\n\r\nimport './EventList.css';\r\n\r\nconst eventList = props => {\r\n    const events = props.events.map(event => {\r\n        return <EventItem\r\n            key={event._id}\r\n            eventId={event._id}\r\n            title={event.title}\r\n            userId={props.authUserId}\r\n            price={event.price}\r\n            date={event.date}\r\n            creatorId={event.createdBy._id}\r\n            onDetail={props.onViewDetail}\r\n        />\r\n    });\r\n    return (\r\n        <ul className=\"events-list\">\r\n            {events}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default eventList;","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <p className=\"spinner\">Loading...</p>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport Modal from '../layouts/Modals/Modal';\r\nimport Backdrop from '../layouts/Backdrop/Backdrop';\r\nimport AuthContext from '../context/auth-context';\r\nimport './Events.css';\r\nimport EventList from '../layouts/Events/EventList/EventList';\r\nimport Spinner from '../layouts/Spinner/Spinner';\r\n\r\nconst config = require('../assets/config.json');\r\n\r\nclass EventsPage extends Component {\r\n    state = {\r\n        creating: false,\r\n        events: [],\r\n        isLoading: false,\r\n        selectedEvent: null\r\n    };\r\n    isActive = true;\r\n\r\n    static contextType = AuthContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.titleElementRef = React.createRef();\r\n        this.priceElementRef = React.createRef();\r\n        this.dateElementRef = React.createRef();\r\n        this.descriptionElementRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchEvents();\r\n    }\r\n\r\n    startCreateEventHandler = () => {\r\n        this.setState({ creating: true });\r\n    }\r\n\r\n    modalConfirmHandler = () => {\r\n        this.setState({ creating: false });\r\n        const title = this.titleElementRef.current.value;\r\n        const price = +this.priceElementRef.current.value;\r\n        const date = this.dateElementRef.current.value;\r\n        const description = this.descriptionElementRef.current.value;\r\n\r\n        if (title.trim().length === 0 || price <= 0 || date.trim().length === 0 || description.trim().length === 0) {\r\n            return;\r\n        }\r\n        const event = { title, price, date, description };\r\n        console.log(event);\r\n\r\n        const requestBody = {\r\n            query: `\r\n                mutation {\r\n                    createEvent(eventInput: {title: \"${title}\", price: ${price}, date: \"${date}\", description: \"${description}\"}) {\r\n                        _id\r\n                        title\r\n                        description\r\n                        date\r\n                        price\r\n                    }\r\n                }\r\n            `\r\n        }\r\n\r\n        const token = this.context.token;\r\n\r\n        fetch(config.URL, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Failed !!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                this.fetchEvents();\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n\r\n    };\r\n\r\n    modalCancelHandler = () => {\r\n        this.setState({ creating: false, selectedEvent: null });\r\n    };\r\n\r\n    fetchEvents() {\r\n        this.setState({ isLoading: true });\r\n        const requestBody = {\r\n            query: `\r\n                query {\r\n                    events {\r\n                        _id\r\n                        title\r\n                        description\r\n                        date\r\n                        price\r\n                        createdBy {\r\n                            _id\r\n                            email\r\n                        }\r\n                    }\r\n                }\r\n            `\r\n        }\r\n\r\n\r\n        fetch(config.URL, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Failed !!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                const events = data.data.events;\r\n                if (this.isActive === true) {\r\n                    this.setState({ events: events, isLoading: false });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if (this.isActive === true) {\r\n                    this.setState({ isLoading: false });\r\n                }\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    showDetailHandler = eventId => {\r\n        this.setState(prevState => {\r\n            const selectedEvent = prevState.events.find(e => e._id === eventId);\r\n            return { selectedEvent: selectedEvent };\r\n        })\r\n    }\r\n\r\n    bookEventHandler = () => {\r\n        const requestBody = {\r\n            query: `\r\n                mutation {\r\n                    bookEvent(eventId: \"${this.state.selectedEvent._id}\") {\r\n                        _id\r\n                        createdAt\r\n                        updatedAt\r\n                    }\r\n                }\r\n            `\r\n        }\r\n\r\n        const token = this.context.token;\r\n\r\n        fetch(config.URL, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Failed !!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                console.log(data);\r\n                if (this.isActive === true) {\r\n                    this.setState({ selectedEvent: null });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                if (this.isActive === true) {\r\n                    this.setState({ selectedEvent: null });\r\n                }\r\n            })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.isActive = false;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {(this.state.creating || this.state.selectedEvent) && (<Backdrop></Backdrop>)}\r\n                {this.state.creating && (\r\n                    <Modal title=\"Add Events\" canCancel canConfirm onCancel={this.modalCancelHandler} onConfirm={this.modalConfirmHandler} confirmText=\"Confirm\" showButton={this.context.token ? true : false}>\r\n                        <form>\r\n                            <div className=\"form-control\">\r\n                                <label htmlFor=\"title\">Title</label>\r\n                                <input type=\"text\" id=\"title\" ref={this.titleElementRef} />\r\n                            </div>\r\n                            <div className=\"form-control\">\r\n                                <label htmlFor=\"price\">Price</label>\r\n                                <input type=\"number\" id=\"price\" ref={this.priceElementRef} />\r\n                            </div>\r\n                            <div className=\"form-control\">\r\n                                <label htmlFor=\"date\">Date</label>\r\n                                <input type=\"datetime-local\" id=\"date\" ref={this.dateElementRef} />\r\n                            </div>\r\n                            <div className=\"form-control\">\r\n                                <label htmlFor=\"description\">Description</label>\r\n                                <textarea rows=\"4\" id=\"description\" ref={this.descriptionElementRef}></textarea>\r\n                            </div>\r\n                        </form>\r\n                    </Modal>\r\n                )}\r\n                {this.state.selectedEvent && (\r\n                    <Modal title=\"Event Details\" canCancel canConfirm onCancel={this.modalCancelHandler} onConfirm={this.bookEventHandler} confirmText=\"Book Event\" showButton={this.context.token ? true : false}>\r\n                        <h1>{this.state.selectedEvent.title}</h1>\r\n                        <h2>\r\n                            &#8377;{this.state.selectedEvent.price} -- {new Date(this.state.selectedEvent.date).toLocaleDateString()}\r\n                        </h2>\r\n                        <p>{this.state.selectedEvent.description}</p>\r\n                    </Modal>\r\n                )}\r\n                {this.context.token && (\r\n                    <div className=\"events-control\">\r\n                        <p>Share your own Events !!</p>\r\n                        <button className=\"btn\" onClick={this.startCreateEventHandler}>Create Event</button>\r\n                    </div>\r\n                )}\r\n                {this.state.isLoading ? <Spinner /> :\r\n                    <EventList\r\n                        events={this.state.events}\r\n                        authUserId={this.context.userId}\r\n                        onViewDetail={this.showDetailHandler}\r\n                    />}\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventsPage\r\n","import React from 'react';\r\n\r\nimport './BookingList.css'\r\n\r\nconst bookingList = props => {\r\n    return (\r\n        <ul className=\"booking-list\">\r\n            {props.bookings.map(booking => {\r\n                return (\r\n                    <li key={booking._id} className=\"booking-item\">\r\n                        <div className=\"booking-item-data\">\r\n                            {booking.event.title} -- {new Date(booking.createdAt).toLocaleDateString()}\r\n                        </div>\r\n                        <div className=\"booking-item-actions\">\r\n                            <button className=\"btn\" onClick={props.onDelete.bind(this, booking._id)}>Cancel Booking</button>\r\n                        </div>\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default bookingList;","import React, { Component } from 'react';\r\nimport AuthContext from '../context/auth-context';\r\nimport Spinner from '../layouts/Spinner/Spinner';\r\nimport BookingList from '../layouts/Bookings/BookingList/BookingList';\r\n\r\nimport './Bookings.css';\r\n\r\nconst config = require('../assets/config.json');\r\n\r\nclass BookingsPage extends Component {\r\n\r\n    state = {\r\n        isLoading: false,\r\n        bookings: []\r\n    };\r\n\r\n    static contextType = AuthContext;\r\n\r\n    componentDidMount() {\r\n        this.fetchBookings()\r\n    }\r\n\r\n    fetchBookings() {\r\n        this.setState({ isLoading: true });\r\n        const requestBody = {\r\n            query: `\r\n                query {\r\n                    bookings {\r\n                        _id\r\n                        createdAt\r\n                        event {\r\n                            _id\r\n                            title\r\n                            date\r\n                        }\r\n                    }\r\n                }\r\n            `\r\n        }\r\n\r\n\r\n        fetch(config.URL, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + this.context.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Failed !!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                const bookings = data.data.bookings;\r\n                this.setState({ bookings: bookings, isLoading: false });\r\n\r\n            })\r\n            .catch(err => {\r\n                this.setState({ isLoading: false });\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n\r\n    deleteBookingHandler = bookingId => {\r\n\r\n        const requestBody = {\r\n            query: `\r\n                mutation {\r\n                    cancelBooking(bookingId: \"${bookingId}\") {\r\n                        _id\r\n                    }\r\n                }\r\n            `\r\n        }\r\n\r\n\r\n        fetch(config.URL, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + this.context.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Failed !!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                this.fetchBookings();\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.isLoading ? <Spinner /> :\r\n                    <BookingList bookings={this.state.bookings} onDelete={this.deleteBookingHandler} />\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookingsPage\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport AuthContext from '../../context/auth-context';\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = (props) => {\r\n    return (<AuthContext.Consumer>\r\n        {(context) => {\r\n            return (\r\n                <header className=\"main-navigation\">\r\n                    <div className=\"main-navigation-logo\">\r\n                        <h1>Event Management</h1>\r\n                    </div>\r\n                    <nav className=\"main-navigation-item\">\r\n                        <ul>\r\n                            {!context.token && (\r\n                                <li>\r\n                                    <NavLink to=\"/auth\">Authenticate</NavLink>\r\n                                </li>\r\n                            )}\r\n                            <li>\r\n                                <NavLink to=\"/events\">Events</NavLink>\r\n                            </li>\r\n                            {context.token && (\r\n                                <React.Fragment>\r\n                                    <li>\r\n                                        <NavLink to=\"/bookings\">Bookings</NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <button onClick={context.logout}>Logout</button>\r\n                                    </li>\r\n                                </React.Fragment>\r\n                            )}\r\n                        </ul>\r\n                    </nav>\r\n                </header>\r\n            )\r\n        }}\r\n    </AuthContext.Consumer>\r\n    )\r\n}\r\n\r\nexport default MainNavigation;\r\n","import { Route, Redirect, Switch, HashRouter } from 'react-router-dom';\nimport AuthPage from './pages/Auth';\nimport EventsPage from './pages/Events';\nimport BookingsPage from './pages/Bookings';\nimport MainNavigation from './layouts/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\n\nimport './App.css';\nimport React, { Component } from 'react';\n\n\nclass App extends Component {\n  state = {\n    token: null,\n    userId: null\n  }\n\n  login = (token, userId, tokenExpiration) => {\n    this.setState({ token: token, userId: userId });\n  };\n\n  logout = () => {\n    this.setState({ token: null, userId: null });\n  };\n\n  render() {\n    return (\n      <HashRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              userId: this.state.userId,\n              login: this.login,\n              logout: this.logout\n            }}>\n            <MainNavigation />\n            <main className=\"main-content\">\n              <Switch>\n                {this.state.token && (\n                  <Redirect from=\"/\" to=\"/events\" exact />\n                )}\n                {this.state.token && (\n                  <Redirect from=\"/auth\" to=\"/events\" exact />\n                )}\n                {!this.state.token && (\n                  <Route path=\"/auth\" component={AuthPage} />\n                )}\n                <Route path=\"/events\" component={EventsPage} />\n                {this.state.token && (\n                  <Route path=\"/bookings\" component={BookingsPage} />\n                )}\n                {!this.state.token && (\n                  <Redirect to=\"/auth\" exact />\n                )}\n\n              </Switch>\n            </main>\n          </AuthContext.Provider>\n        </React.Fragment>\n      </HashRouter>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}